{"version":3,"sources":["reducers/itemReducer.js","reducers/index.js","actions/types.js","store.js","components/AppNavBar.js","actions/itemActions.js","components/ShoppingList.js","components/ItemModal.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","loading","combineReducers","item","state","action","type","payload","console","log","filter","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavBar","props","toggleNavbar","setState","isOpen","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","setItemsLoading","ShoppingList","onDeleteClick","id","deleteItem","getItems","ListGroup","TransitionGroup","map","name","CSSTransition","key","timeout","classNames","ListGroupItem","Button","size","bind","connect","dispatch","axios","get","then","res","data","delete","ItemModal","modal","toggleModal","handleSubmit","e","preventDefault","newItem","addItem","handleChange","target","value","style","marginBottom","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","placeholder","onChange","marginTop","block","post","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b52d2775.chunk.js","sourcesContent":["import {\r\n\tGET_ITEMS,\r\n\tADD_ITEM,\r\n\tDELETE_ITEM,\r\n\tITEMS_LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\tloading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ITEMS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase DELETE_ITEM:\r\n\t\t\tconsole.log(\"delete called\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: state.items.filter((item) => item._id !== action.payload),\r\n\t\t\t};\r\n\t\tcase ADD_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: [action.payload, ...state.items],\r\n\t\t\t};\r\n\t\tcase ITEMS_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\n\r\nexport default combineReducers({\r\n\titem: itemReducer,\r\n});\r\n","export const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(\r\n\t\tapplyMiddleware(...middleware),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tCollapse,\r\n\tNavbar,\r\n\tNavbarToggler,\r\n\tNavbarBrand,\r\n\tNav,\r\n\tNavItem,\r\n\tNavLink,\r\n\tContainer,\r\n} from \"reactstrap\";\r\n\r\nclass AppNavBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisOpen: false,\r\n\t\t};\r\n\t}\r\n\r\n\ttoggleNavbar = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen: !this.state.isOpen,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n\t\t\t\t\t<NavbarToggler onClick={this.toggleNavbar} />\r\n\t\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\r\n\t\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<NavLink href=\"/\">Github</NavLink>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AppNavBar;\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getItems = () => (dispatch) => {\r\n\tdispatch(setItemsLoading());\r\n\taxios\r\n\t\t.get(\"/api/items\")\r\n\t\t.then((res) => dispatch({ type: GET_ITEMS, payload: res.data }));\r\n};\r\n\r\nexport const addItem = (newItem) => (dispatch) => {\r\n\taxios\r\n\t\t.post(\"/api/items\", newItem)\r\n\t\t.then((res) => dispatch({ type: ADD_ITEM, payload: res.data }));\r\n};\r\n\r\nexport const deleteItem = (id) => (dispatch) => {\r\n\taxios\r\n\t\t.delete(`/api/items/${id}`)\r\n\t\t.then((res) => dispatch({ type: DELETE_ITEM, payload: id }));\r\n\treturn {\r\n\t\ttype: DELETE_ITEM,\r\n\t\tpayload: id,\r\n\t};\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n\treturn {\r\n\t\ttype: ITEMS_LOADING,\r\n\t};\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItems, deleteItem } from \"../actions/itemActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ShoppingList extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getItems();\r\n\t}\r\n\r\n\tonDeleteClick = (id) => {\r\n\t\tconsole.log(\"delete is clicked\");\r\n\t\tthis.props.deleteItem(id);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { items } = this.props.item;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t<TransitionGroup className=\"shopping-list\">\r\n\t\t\t\t\t\t{items.map(({ _id, name }) => (\r\n\t\t\t\t\t\t\t<CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n\t\t\t\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onDeleteClick.bind(this, _id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nShoppingList.propTypes = {\r\n\tgetItems: PropTypes.func.isRequired,\r\n\tdeleteItem: PropTypes.func.isRequired,\r\n\titem: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\titem: state.item,\r\n});\r\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tForm,\r\n\tFormGroup,\r\n\tLabel,\r\n\tInput,\r\n} from \"reactstrap\";\r\nimport { addItem } from \"../actions/itemActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ItemModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tname: \"\",\r\n\t};\r\n\r\n\ttoggleModal = () => {\r\n\t\tthis.setState({\r\n\t\t\tmodal: !this.state.modal,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst newItem = {\r\n\t\t\tname: this.state.name,\r\n\t\t};\r\n\t\tthis.props.addItem(newItem);\r\n\t\tthis.toggleModal();\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"dark\"\r\n\t\t\t\t\tstyle={{ marginBottom: \"2rem\" }}\r\n\t\t\t\t\tonClick={this.toggleModal}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Item\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggleModal}>\r\n\t\t\t\t\t\tAdd to Shopping List\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label htmlFor=\"item\">Item</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"item\"\r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Add shopping item\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"dark\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: \"2rem\" }}\r\n\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAdd Item\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nItemModal.propTypes = {\r\n\taddItem: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\titem: state.item,\r\n});\r\nexport default connect(mapStateToProps, { addItem })(ItemModal);\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AppNavBar from \"./components/AppNavBar\";\nimport ShoppingList from \"./components/ShoppingList\";\nimport ItemModal from \"./components/ItemModal\";\nimport { Container } from \"reactstrap\";\n\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<AppNavBar />\n\t\t\t\t<Container>\n\t\t\t\t\t<ItemModal />\n\t\t\t\t\t<ShoppingList />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}